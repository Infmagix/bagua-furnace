<UserControl x:Class="honghaier.View.TestView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals"
             xmlns:local="clr-namespace:honghaier.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!--  Growby's are not necessary but are used to push series into top/bottom half of the chart, to give a cleaner visual appearance  -->

        <!--  Converter used by feedback panel below SciChartSurface  -->
        <s:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <s:DoubleRange x:Key="GrowBy1" Max="0.1" Min="0.1"/>
        <s:DoubleRange x:Key="GrowBy2" Max="0.2" Min="0.2"/>

        <!--  Common TextBlock style, uses ColorToBrushConverter to convert RenderableSeries.Stroke to a brush for textblocks  -->
        <Style x:Key="tbStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="2,4" />
            <Setter Property="Foreground" Value="{Binding Stroke, Converter={StaticResource ColorToBrushConverter}}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <!--  Converter used by feedback panel below SciChartSurface  -->

        <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!--  DataContext is SeriesInfo for each legend row  -->
        <!--  This is not part of the example, but just to toggle features on and off such as  -->
        <!--  RenderableSeries.IsVisible and setting the SeriesValueModifier.IsSeriesValueModifierEnabled attached property  -->
        <DataTemplate x:Key="CustomLegendTemplate" DataType="s:SciChartLegend">
            <Grid Margin="2,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--  Series icon, binds to SeriesInfo.Stroke  -->
                <Ellipse Grid.Column="0"
                         Width="10" Height="10" Margin="5,0,20,0"
                         HorizontalAlignment="Left" VerticalAlignment="Center"
                         Fill="{Binding Stroke, Converter={StaticResource ColorToBrushConverter}}" />

                <!--  Series name (SeriesInfo.SeriesName)  -->
                <TextBlock Grid.Column="1" Width="90" HorizontalAlignment="Center" Text="{Binding SeriesName}"/>

                <!--  Show or hide the 'Visibility Checkboxes'  -->
                <Grid Grid.Column="2" Visibility="{Binding DataContext.ShowVisibilityCheckboxes, ElementName=PART_LegendItems, Converter={StaticResource BooleanToVisibilityConverter}}">

                    <!--  Binds to SeriesInfo.IsVisible to show and hide the series  -->
                    <CheckBox HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="R-Series Visible?"
                              Foreground="{Binding Stroke, Converter={StaticResource ColorToBrushConverter}}"
                              IsChecked="{Binding IsVisible, Mode=TwoWay}" />
                </Grid>

                <!--  Binds to SeriesInfo.RenderableSeries, attached property SeriesValueModifier.IsSeriesValueModifierEnabled  -->
                <!--  This demonstrates how to enable or disable the axis markers per series. If you want to do this you can  -->
                <!--  just bind to or set SeriesValueModifier.IsSeriesValueModifierEnabled, no need to create the legend, we just do that for demo purposes  -->
                <CheckBox Grid.Column="3"
                          Margin="10,0,0,0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content="IsSeriesValueModifierEnabled?"
                          DataContext="{Binding RenderableSeries}"
                          Foreground="{Binding Stroke, Converter={StaticResource ColorToBrushConverter}}"
                          IsChecked="{Binding Path=(s:SeriesValueModifier.IncludeSeries), Mode=TwoWay}" />

            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--  The SciChartInteractionToolbar adds zoom, pan, zoom extents and rotate functionality  -->
        <!--  to the chart and is included for example purposes.  -->
        <!--  If you wish to know how to zoom and pan a chart then do a search for Zoom Pan in the Examples suite!  -->
        <ext:SciChartInteractionToolbar TargetSurface="{Binding Source={x:Reference Name=sciChart}}"/>


        <!--  Create the chart surface  -->
        <s:SciChartSurface Name="sciChart" Grid.Column="1" >

            <!--  Declare RenderableSeries  -->
            <s:SciChartSurface.RenderableSeries>
                <s:FastLineRenderableSeries x:Name="renderableSeries0" Stroke="OrangeRed" StrokeThickness="2"/>
                <s:FastLineRenderableSeries x:Name="renderableSeries1" Stroke="Green" StrokeThickness="2"/>
                <s:FastLineRenderableSeries x:Name="renderableSeries2" Stroke="Blue" StrokeThickness="2"/>
                <s:FastLineRenderableSeries x:Name="renderableSeries3" Stroke="MediumPurple" StrokeThickness="2"/>
                <s:FastLineRenderableSeries x:Name="renderableSeries4" Stroke="Chocolate" StrokeThickness="2"/>
                <s:FastLineRenderableSeries x:Name="renderableSeries5" Stroke="LightPink" StrokeThickness="2"/>
            </s:SciChartSurface.RenderableSeries>

            <!--  Create an X Axis  -->
            <s:SciChartSurface.XAxis>
                <s:DateTimeAxis DrawMinorTicks="False" AutoRange="Always"
                                DrawMinorGridLines="False" Margin="0,0,0,0" 
                                SubDayTextFormatting="HH:mm:ss" TitleFontSize="10" 
                                TextFormatting="HH:mm:ss" Id="DefaultAxisId" TitleFontWeight="Normal" />
            </s:SciChartSurface.XAxis>

            <!--  Create a Y Axis with GrowBy  -->
            <s:SciChartSurface.YAxis>
                <s:NumericAxis x:Name="yAxis" DrawMajorBands="True" AutoRange="Once">
                    <s:NumericAxis.GrowBy>
                        <s:DoubleRange Max="0.1" Min="0.1"/>
                    </s:NumericAxis.GrowBy>
                </s:NumericAxis>
            </s:SciChartSurface.YAxis>

            <s:SciChartSurface.ChartModifier>
                <s:ModifierGroup>
                    <s:CursorModifier/>
                    <!--  SeriesValueModifier: This Provides axis markers per series, for each RenderableSeries that  -->
                    <!--  has SeriesValueModifier.IsSeriesValueModifierEnabled=True  -->
                    <s:SeriesValueModifier/>
                    <s:LegendModifier x:Name="legendModifier" ShowLegend="True" ShowVisibilityCheckboxes="True"/>
                </s:ModifierGroup>
            </s:SciChartSurface.ChartModifier>
        </s:SciChartSurface>
    </Grid>
</UserControl>
